<launch>
    <arg name= "cmd_src" default = "none" doc="Can be set to circle to start the circle node, teleop to control with keyboard or none if another node will publish cmd_vel data"/>
    <arg name= "robot" default = "nusim" doc="Can be set to nusim to start the simulator, localhost to run nodes from the turtlebot, turtlebotname to run nodes on that turtlebot or none to not run any other nodes"/>
    <arg name= "use_rviz" default = "false" doc="use_rviz:=true to use RVIZ and see the robot model,tf frames and odometry"/>
    
    
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find nuturtle_control)/config/nuturtle.rviz -f 'world'" required="true" if="$(arg use_rviz)"/>
    
    
    <node pkg="tf2_ros" type="static_transform_publisher" name="link1_broadcaster" args="0 0 0 0 0 0 1 world odom" />
    <rosparam file="$(find nusim)/config/basic_world.yaml" />
    <rosparam file="$(find nuturtle_description)/config/diff_params.yaml" />
    <!-- <node name="turtle_interface" pkg="nuturtle_control" type="turtle_interface" output = "screen">
        <rosparam file="$(find nusim)/config/basic_world.yaml" />
    </node> -->

    <param name ="odom_id" type="string" value ="odom" />
    <param name ="body_id" type="string" value ="blue-base_footprint" />
    <param name ="left_wheel_joint" value ="blue-wheel_left_link" />
    <param name ="right_wheel_joint" value ="blue-wheel_right_link" />

    <!-- <node name="odometry" pkg="nuturtle_control" type="odometry" output = "screen"/> -->

    <!-- cmd_src args -->
    <group if="$(eval arg('cmd_src') == 'circle')">
        <node pkg="nuturtle_control" type="circle" name="circle"> 
            <param name ="frequency" value ="100" />
        </node>
    </group>

    <group if="$(eval arg('cmd_src') == 'teleop')">
        <node pkg="turtlebot3_teleop" type="turtlebot3_teleop_key" name="turtlebot3_teleop_key" output="screen"/> 
    </group>

    <group ns="blue">
            
        <param name="robot_description" command = "$(find xacro)/xacro $(find nuturtle_description)/urdf/turtlebot3_burger.urdf.xacro color:=blue" />
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>
        <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"/>
    </group>

    <group if="$(eval arg('robot') == 'nusim')">
        <group ns="red">
            <!-- <node name="rviz" pkg="rviz" type="rviz" args="-d $(find nusim)/config/nusim.rviz -f 'world'" required="true"/> -->
            <param name="robot_description" command = "$(find xacro)/xacro $(find nuturtle_description)/urdf/turtlebot3_burger.urdf.xacro color:=red" />
            <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
                <remap from="/red/joint_states" to="/joint_states"/>
            </node>
        </group>

        <node name="odometry" pkg="nuturtle_control" type="odometry"/>
        <node name="turtle_interface" pkg="nuturtle_control" type="turtle_interface"/>        

        <!-- Launch Node with parameters inside -->
        <node name="nusim" pkg="nusim" type="nusim" output = "screen">
            <rosparam file="$(find nusim)/config/basic_world.yaml" />
            <rosparam file="$(find nuturtle_description)/config/diff_params.yaml" />
            <remap from="/red/wheel_cmd" to="/wheel_cmd"/>
            <remap from="/red/sensor_data" to="/sensor_data"/>
        </node>
    </group>

    <group if="$(eval arg('robot') == 'localhost')">
        <include file = "$(find nuturtle_control)/launch/basic_remote.launch" pass_all_args = "true" >
            <arg name="robot"                       value="$(arg robot)"/>
        </include>
        <node machine="turtlebot" name="odometry" pkg="nuturtle_control" type="odometry"/>
        <node machine="turtlebot" name="turtle_interface" pkg="nuturtle_control" type="turtle_interface"/>
    </group>

    <group if="$(eval arg('robot') == 'leonardo')">
        <include file = "$(find nuturtle_control)/launch/basic_remote.launch" pass_all_args = "true" >
            <arg name="robot"                       value="$(arg robot)"/>
        </include>
        <node machine="turtlebot" name="odometry" pkg="nuturtle_control" type="odometry"/>
        <node machine="turtlebot" name="turtle_interface" pkg="nuturtle_control" type="turtle_interface"/>
    </group>

</launch>