<launch>
    <arg name= "cmd_src" default = "none" doc="Can be set to circle to start the circle node, teleop to control with keyboard or none if another node will publish cmd_vel data"/>
    <arg name= "robot" default = "nusim" doc="Can be set to nusim to start the simulator, localhost to run nodes from the turtlebot, turtlebotname to run nodes on that turtlebot or none to not run any other nodes"/>
    <arg name= "use_rviz" default = "false" doc="use_rviz:=true to use RVIZ and see the robot model,tf frames and odometry"/>
    <arg name= "config_file" default = "default_config.yaml" doc="use config_file:=filename to select a particular config file name"/>
    
    <!-- <node name="rviz" pkg="rviz" type="rviz" args="-d $(find nuturtle_control)/config/nuturtle.rviz -f 'world'" required="true" if="$(arg use_rviz)"/> -->
    
    
    <node pkg="tf2_ros" type="static_transform_publisher" name="link1_broadcaster" args="0 0 0 0 0 0 1 world map" />
    <node pkg="tf2_ros" type="static_transform_publisher" name="link2_broadcaster" args="0 0 0 0 0 0 1 map odom" />
    <rosparam file="$(find nusim)/config/basic_world.yaml" />
    <rosparam file="$(find nuturtle_description)/config/diff_params.yaml" />


    <param name ="odom_id" type="string" value ="odom" />
    <param name ="body_id" type="string" value ="green-base_footprint" />
    <param name ="left_wheel_joint" value ="green-wheel_left_link" />
    <param name ="right_wheel_joint" value ="green-wheel_right_link" />


    <group if="$(eval arg('cmd_src') == 'teleop')">
        <include file ="$(find turtlebot3_teleop)/launch/turtlebot3_teleop_key.launch">
            <arg name="model" value="burger" />
        </include>
    </group>

    <group ns="green">
        <param name="robot_description" command = "$(find xacro)/xacro $(find nuturtle_description)/urdf/turtlebot3_burger.urdf.xacro color:=green" />
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>
        <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"/>
    </group>

    <group ns="blue">
        <param name="robot_description" command = "$(find xacro)/xacro $(find nuturtle_description)/urdf/turtlebot3_burger.urdf.xacro color:=blue" />
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>
        <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"/>
    </group>

    <group if="$(eval arg('robot') == 'nusim')">
        <node name="rviz" pkg="rviz" type="rviz" args="-d $(find nuslam)/config/nuslam.rviz -f 'world'" required="true" if="$(arg use_rviz)"/>  
        <group ns="red">
            <param name="robot_description" command = "$(find xacro)/xacro $(find nuturtle_description)/urdf/turtlebot3_burger.urdf.xacro color:=red" />
            <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
                <remap from="/red/joint_states" to="/joint_states"/>
            </node>
        </group>

        <node name="slam" pkg="nuslam" type="slam"/>
        <node name="turtle_interface" pkg="nuturtle_control" type="turtle_interface"/>        

        <node name="nusim" pkg="nusim" type="nusim" output = "screen">
            <rosparam file="$(find nusim)/config/basic_world.yaml" />
            <rosparam file="$(find nuturtle_description)/config/diff_params.yaml" />
            <remap from="/red/wheel_cmd" to="/wheel_cmd"/>
            <remap from="/red/sensor_data" to="/sensor_data"/>
            <param name ="sim_flag" value ="sim" />
            <rosparam file="$(find nuturtle_control)/config/$(arg config_file)"/>
        </node>
    </group>

    

</launch>